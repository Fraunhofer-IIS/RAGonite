{
    "id": "confluence-064",
    "title": "sbuild",
    "url": "https://openxt.atlassian.net/wiki/spaces/DC/pages/19136514/sbuild",
    "content": "<p>Owned by Jed\nLast updated: Jan 12, 2016 by Ross Philipson\n\n</p><ac:structured-macro ac:macro-id=\"e51264a6-6cf2-48c6-ab9c-c4e2c07469d9\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"></ri:attachment></ac:image></p><p>Copyright 2015 by Assured Information Security, Inc. Created by Jean-Edouard Lejosne &lt;lejosnej@<a href=\"http://ainfosec.com\">ainfosec.com</a>&gt;. This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro><p>sbuild is the official Debian package builder.</p><p>Debian packages are currently built two different ways, neither of them using sbuild.</p><p><ac:structured-macro ac:macro-id=\"87e0141f-8fdf-42f3-add8-e68e6f890fc9\" ac:name=\"toc\" ac:schema-version=\"1\"><ac:parameter ac:name=\"outline\">true</ac:parameter></ac:structured-macro></p><h2>Current Debian packaging solutions in OpenXT</h2><p>The first way, used for the guest tools, build a package file without any tool, by \"manually\" creating all the Debian files and compressing everything into a .deb. This is not right, and hardly maintainable.</p><p>See <a href=\"https://github.com/OpenXT/openxt/tree/master/pkg-xctools\">https://github.com/OpenXT/openxt/tree/master/pkg-xctools</a></p><p> </p><p>The second way, implemented in xenclient-deb.bbclass, uses a Debian chroot and the low-level dpkg tools. This is an improvement over the first way, but still a lot of code and hard-coded metadata files.</p><p>See <a href=\"https://github.com/OpenXT/xenclient-oe/blob/master/classes/xenclient-deb.bbclass\">https://github.com/OpenXT/xenclient-oe/blob/master/classes/xenclient-deb.bbclass</a></p><h2>First sbuild implementation</h2><p>In OpenXT, there is a bbclass that implements rudimentary sbuild support. It is, or at least was, functional.</p><p>However, it relies on the sbuild binary and environment of the host build machine, which is something we really want to avoid in OpenEmbedded.</p><p>I think it also requires the user to setup the sbuild chroots beforehand...</p><h2>Tentative of sbuild integration in OE</h2><p><span style=\"line-height: 1.42857;\">The previous solution would be ideal if we had an sbuild environment built inside of OpenEmbedded (\"native\").</span></p><p>I spent some time trying to get there, it did not go very well...</p><p>The bbclass relies on (at least) 3 tools: sbuild, schroot and reprepro. I managed to build sbuild and reprepro as native, but schroot depends on the Boost library, which has an awful build system and an incomplete OpenEmbedded recipe.</p><p>I wrote recipes for about a dozen dependencies before getting stuck on Boost and giving up. Who knows, maybe it was the last one, or maybe there's another dozen dependencies needed...</p><p>It would have been really nice to have full OE integration, but at this point, I don't think it it worth the amount of time and effort needed for that.</p><p>See <a href=\"https://github.com/jean-edouard/xenclient-oe/commits/sbuild\">https://github.com/jean-edouard/xenclient-oe/commits/sbuild</a></p><h2>Other ideas</h2><p>I think we need a full Debian environment to be able to install and use sbuild properly. There's 2 options, we either do a chroot or use a whole Debian system (or VM).</p><h3>Using a Debian chroot</h3><p>This would allow us to keep things controlled by OpenEmbedded, which I think would be great.</p><p>The trick is to find a way to build and run the chroot without root permissions. The solution may reside in fakeroot/fakechroot, which I don't know much about.</p><h3>Using a Debian machine</h3><p>We could have a completely separate build environment for the Debian tools, like we do for the synchronizer bits.</p><p>I think this option is inferior, as it requires more work and resources to setup. The whole thing is already complicated enough...</p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "DC"
}