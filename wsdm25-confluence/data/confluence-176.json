{
    "id": "confluence-176",
    "title": "Build Environment in an LXC",
    "url": "https://openxt.atlassian.net/wiki/spaces/BS/pages/14844079/Build+Environment+in+an+LXC",
    "content": "<p>Owned by Ross Philipson\nLast updated: Mar 01, 2016 by Ross Philipson\n\n</p><p><strong>NOTE:</strong> This is not an officially supported build environment. It is a rundown on how to get something like this to work. Maybe someday we can fully support it...</p><h3>Debian Squeeze i386 instructions</h3><p>The recommended OpenXT build environment is 32-bit debian squeeze. The following Debian Squeeze packages are needed before building:</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo apt-get install make gcc automake git-core bcc ruby genisoimage libglib2.0-dev libdbus-glib-1-dev libc6-dev initramfs-tools gzip bzip2 g++ file flex bison bin86 gawk rsync iasl ccache gettext libxml-parser-perl libpci-dev smbclient unzip help2man diffstat texi2html texinfo cvs subversion python2.5-dev sun-java6-jdk python-flup python-setuptools python-routes makeself wget build-essential coreutils libsdl1.2-dev docbook-utils diffstat x11-xserver-utils quilt x11proto-core-dev xsltproc xutils-dev expect lib64gcc1 libc6-dev-amd64 genext2fs python-simplejson python-psycopg2 guilt debootstrap ghc gfortran xz-utils zip libtool cproto indent chrpath reprepro lintian</p></blockquote><p>For those that are using 64-bit and/or newer distros, one way to get a debian squeeze build environment up and running is using linux containers (LXC). You may follow the instructions to configure LXC, available at: <a href=\"https://wiki.debian.org/LXC\" style=\"line-height: 1.42857;\">https://wiki.debian.org/LXC</a></p><h3>Debian Jessie x64 instructions</h3><p><s>Setup cgroup</s> (not necessary, see <a href=\"https://wiki.debian.org/LXC#Prepare_the_host\">https://wiki.debian.org/LXC#Prepare_the_host</a>):</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo sh -c \"echo cgroup /sys/fs/cgroup cgroup defaults 0 0 &gt;&gt; /etc/fstab\"</p><p>sudo mount /sys/fs/cgroup</p></blockquote><p>Install required packages:</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo aptitude install lxc</p><p>sudo aptitude install bridge-utils libvirt-bin debootstrap</p></blockquote><p>Build 32-bit squeeze container:</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo MIRROR=<a href=\"http://mirror.steadfast.net/debian\">http://mirror.steadfast.net/debian</a> lxc-create -n openxt-buildvm-i386 -t debian -- --arch i386 --release squeeze</p><p># You can override the default path for containers in 2 ways</p><p># First by creating /etc/lxc/lxc.conf and setting a path of the form: lxc.lxcpath = &lt;path&gt;</p><p># Or by overriding it during lxc-create (note that if you do this all other command must also use the -P &lt;path&gt; that is used here):</p><p><span style=\"color: rgb(112,112,112);\">sudo MIRROR=</span><a href=\"http://mirror.steadfast.net/debian\">http://mirror.steadfast.net/debian</a><span style=\"color: rgb(112,112,112);\"> lxc-create -n openxt-buildvm-i386 -P &lt;path&gt; -t debian -- --arch i386 --release squeeze</span></p></blockquote><p>Alternate networking. If you are using the new build scripts for building OpenXT 6.0 and later, you can add this new container to the private network that those scripts setup. If this is done, skip the network setup instructions on this page. The instructions are here:</p><p><ac:link><ri:page ri:content-title=\"Working - Version 6 and Later\" ri:space-key=\"DC\"></ri:page><ac:plain-text-link-body><![CDATA[Alternate Private Network]]></ac:plain-text-link-body></ac:link></p><p>Setup NAT networking for container:</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo apt-get install libvirt-bin</p><p>sudo virsh net-start default</p><p>sudo sed -i 's/lxc.network.type\\ =.*/lxc.network.type\\ =\\ veth/g' /var/lib/lxc/openxt-buildvm-i386/config</p><p>sudo sh -c 'echo \"lxc.network.flags = up\" &gt;&gt; /var/lib/lxc/openxt-buildvm-i386/config'</p><p>sudo sh -c 'echo \"lxc.network.link = virbr0\" &gt;&gt; /var/lib/lxc/openxt-buildvm-i386/config'</p></blockquote><p>Start the container:</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo lxc-start --name openxt-buildvm-i386</p></blockquote><p>Login to the container with root/root</p><p>Setup networking</p><blockquote style=\"margin-left: 0.0px;\"><p>sudo dhclient eth0</p></blockquote><p>Get the required packages installed:</p><blockquote style=\"margin-left: 0.0px;\"><p>apt-get install vim sed wget cvs subversion git-core coreutils unzip texi2html texinfo docbook-utils gawk python-pysqlite2 diffstat help2man make gcc build-essential g++ desktop-file-utils chrpath cpio sudo rpm curl</p><p>apt-get install ghc guilt iasl quilt bin86 bcc libsdl1.2-dev liburi-perl genisoimage policycoreutils unzip</p></blockquote><p>Add your user account:</p><blockquote style=\"margin-left: 0.0px;\"><p>adduser yourusername</p></blockquote><p>Fixup default shell to bash (arrow over to 'No' and press enter when prompted):</p><blockquote style=\"margin-left: 0.0px;\"><p>dpkg-reconfigure dash</p></blockquote><p>Verify above command set /bin/sh link correctly:</p><blockquote style=\"margin-left: 0.0px;\"><p>$ ls -l /bin/sh</p><p>lrwxrwxrwx 1 root root 4 Jul 23 11:13 /bin/sh -&gt; bash</p></blockquote><p>Fake uname output for packages using it (cough) xen-tools (cough):</p><blockquote style=\"margin-left: 0.0px;\"><p>mv /bin/uname /bin/uname.real</p><p>echo '#!/bin/bash' &gt; /bin/uname</p><p>echo '/bin/uname.real $@ | sed 's/amd64/i686/g' | sed 's/x86_64/i686/g'' &gt;&gt; /bin/uname</p><p>chmod +x /bin/uname</p></blockquote><p>Switch to your user account:</p><blockquote style=\"margin-left: 0.0px;\"><p>su yourusername</p></blockquote><p>Download the repo:</p><blockquote style=\"margin-left: 0.0px;\"><p>git clone <a href=\"git://github.com/OpenXT/openxt.git\">git://github.com/OpenXT/openxt.git</a></p><p>cd openxt</p><p>cp example-config .config</p></blockquote><p>Generate certs:</p><blockquote style=\"margin-left: 0.0px;\"><p>mkdir certs # make a certs directory inside the openxt directory</p><p>openssl genrsa -out certs/prod-cakey.pem 2048</p><p>openssl genrsa -out certs/dev-cakey.pem 2048</p><p>openssl req -new -x509 -key certs/prod-cakey.pem -out certs/prod-cacert.pem -days 1095</p><p>openssl req -new -x509 -key certs/dev-cakey.pem -out certs/dev-cacert.pem -days 1095</p></blockquote><p>Fixup cert paths in .config:</p><blockquote style=\"margin-left: 0.0px;\"><p>REPO_PROD_CACERT=\"/home/yourusername/openxt/certs/prod-cacert.pem\"</p><p>REPO_DEV_CACERT=\"/home/yourusername/openxt/certs/dev-cacert.pem\"</p><p>REPO_DEV_SIGNING_CERT=\"/home/yourusername/openxt/certs/dev-cacert.pem\"</p><p>REPO_DEV_SIGNING_KEY=\"/home/yourusername/openxt/certs/dev-cakey.pem\"</p></blockquote><p>Make output directory:</p><blockquote style=\"margin-left: 0.0px;\"><p>mkdir ~/openxt-build</p></blockquote><p>Setup OE:</p><blockquote style=\"margin-left: 0.0px;\"><p>./do_build.sh -s setupoe</p></blockquote><p>Make sure OE builds for x32 (running kernel uname shows x86_64):</p><blockquote style=\"margin-left: 0.0px;\"><p>echo 'BUILD_ARCH=\"i686\"' &gt;&gt; ~/openxt/build/conf/local.conf</p></blockquote><p>Kick off build:</p><blockquote style=\"margin-left: 0.0px;\"><p>./do_build.sh -d ~/openxt-build | tee -a build.log</p></blockquote>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "BS"
}