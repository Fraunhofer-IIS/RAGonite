{
    "id": "confluence-101",
    "title": "Test Case Management notes",
    "url": "https://openxt.atlassian.net/wiki/spaces/~cclark/pages/57835523/Test+Case+Management+notes",
    "content": "<p>Owned by Christopher Clark\nLast updated: Sep 21, 2016 by Christopher Clark\n\n</p><h2>Requirements</h2><p>I investigated options for a Test Case Management System for OpenXT early in 2016.<br/><br/>Considerations were:<br/><br/>* Open access to the raw test case data</p><p><br/>This is a hard requirement. We need to be able to export all of the test cases from whichever system we choose, in a format that we can process by scripts. This is to ensure that we do not end up stuck with a system that we cannot migrate away from.<br/><br/>* Accessibility via the public internet</p><p><br/></p><div>Our community is geographically distributed. We need to support anyone accessing the system from anywhere with internet access.</div><div>* Usability</div><div>The system must be fast enough to be able to use interactively, so that people using it can be productive and work efficiently. It needs to have efficient workflows for common tasks, such as defining test runs, executing test cases and editting test cases.<br/><br/></div><div>* Cost</div><div>We do not have an established method of funding OpenXT infrastructure at the moment. We have a preference for software that is free of cost. If the software and hosting is not free of cost, then we will need to determine how to fund it.</div><p>* Support for User Roles</p><p><br/>We need to be able to handle permissions for: general users separately from testers and QA staff, separately from system admins.</p><div>All users should be authenticated before using the system, with the possible exception of allowing public read-only access.</div><p>* Hosting</p><p><br/>Some software can be hosted free of charge on public cloud services. Alternatively, a member of the OpenXT community may choose to volunteer their resources for the community to use.<br/><br/></p><div>* Access to the software</div><div>OpenXT should not build a dependency on a web service since web services regularly go out of business in shorter timescales than the life of this project. When we choose a tool, we want a copy of the software to be able to run it for as long as we need to.</div><div><div>* Support for the software</div><div>The software vendor must provide security updates for the software.</div></div><p>* JIRA integration<br/>It would be nice to have links between JIRA defect reports and the test cases that relate to them. Both Zephyr and Klaros support this.</p><h3>Klaros and Zephyr<br/><br/></h3><div>Both Klaros and Zephyr have editions of their software that are free of cost to use for Open Source projects such as OpenXT. They do not provide free of cost hosting, however. Both of them are large pieces of software that need major system resources to run with acceptable performance, which makes them expensive to run in a Cloud Service. Note that Zephyr has recently changed its position on its support for Open Source projects in a negative way - check their site for current status.<br/><br/>==<br/><br/></div><div>Klaros is a Java-based system and can run on Linux environments, and possibly also on Windows or MacOS. I made a test server run on RedHat's OpenShift hosting to evaluate the performance of it there; I think it runs too slowly without paying for more CPU and RAM resources on that cloud.<br/><br/></div><div>With Klaros, we could pay for Klaros's own hosting, or run it on our own infrastructure, and I don't think the difference in performance or usability would be noticeable. The main problem with Klaros's own hosting would be cost. Here is the cost calculator:<br/><a href=\"http://www.klaros-testmanagement.com/en_US/purchase\">http://www.klaros-testmanagement.com/en_US/purchase</a><br/><br/>==</div><div>Zephyr's software is based on Adobe Flash and the version that they provide free of charge for Open Source projects only runs on a Windows server.<br/><br/></div><div>With Zephyr, we could pay for hosting on the Atlassian Cloud where we also run JIRA - however, if we do that, we would incur a per-user-license fee, which would be bad, because we are a public Open Source project and we have given many people JIRA accounts. I think it's important that we allow a JIRA account for anyone who wants to be involved in OpenXT. At the moment, that costs us no money to do so.<br/><br/>So I don't think that we should link the Zephyr license to the JIRA accounts. That means that we cannot use Zephyr on the Atlassian Cloud and link it to our JIRA system. The best way to use Zephyr with OpenXT would be to run Zephyr community edition on a Windows machine that is OpenXT infrastructure.</div><div><br/>==</div><div>In short, I think our choices are:<br/><br/></div><div>*) Run Zephyr on a dedicated Windows machine somewhere, and make it accessible from the internet.</div><p><br/>*) Run Klaros on a dedicated Linux machine somewhere, and make it accessible from the internet.</p><p><br/></p><h2>Test Cases</h2><p><ac:link><ri:attachment ri:filename=\"mod-Klaros-Backup-2016-03-03T18_38_13-05_00.xml\"></ri:attachment><ac:plain-text-link-body><![CDATA[Klaros-format OpenXT Test Cases mod-Klaros-Backup-2016-03-03T18_38_13-05_00.xml]]></ac:plain-text-link-body></ac:link></p><p><br/></p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassianâ€™s official documentation for the most current information.",
    "space": "~cclark"
}