{
    "id": "confluence-195",
    "title": "Enhanced Guest ACPI PM Feature",
    "url": "https://openxt.atlassian.net/wiki/spaces/DC/pages/14844071/Enhanced+Guest+ACPI+PM+Feature",
    "content": "<p>Owned by Ross Philipson\nLast updated: Oct 30, 2015 by Ross Philipson\n\n</p><ac:structured-macro ac:macro-id=\"d219fd06-30da-4363-a01d-62d7accec762\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"><ri:page ri:content-title=\"Documentation Guidelines\" ri:space-key=\"OD\"></ri:page></ri:attachment></ac:image></p><p>Copyright 2015 by Assured Information Security, Inc. Created by Ross Philipson &lt;philipsonr@ainfosec.com&gt;. This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro><p><span><br/></span></p><p><span>OpenXT provides enhanced guest ACPI power management support primarily for portable computers and tablets. This Wiki describes how this feature works and contains a section on testing.</span></p><h2>Guest APCI PM Enhancements Feature</h2><p>There are a number of components that make the ACPI PM feature work. This includes additional guest virtual ACPI firmware, ACPI device model support in QEMU and platform monitoring/reporting in xcpmd (the power/platform management daemon). These will be covered in this order in a “top down” manner.</p><h3>Guest Virtual Firmware</h3><p>The feature provides a new power management ACPI SSDT table. An SSDT contains auxiliary ACPI code to be loaded by the kernel in the guest. This SSDT surfaces a number of new devices related to power management including:</p><ul><li>Two battery devices that represent two possible battery slots.</li><li>An AC adapter device.</li><li>Lid device.</li><li>Sleep and Power button devices.</li></ul><p>The battery devices indicate the status of the battery – present or missing. When present they report the ACPI standard battery information and the current battery status. The battery status will indicate whether the batteries are charging/discharching and remaining capacity. The AC adapter device reports whether the system (and guest) are on AC power. The lid device reports whether the lid is open or closed. These devices are present on portable computers.</p><p>The SSDT also supplies power and sleep buttons. These simulate what occurs when power and sleep buttons are pressed on a system. These are present in all portable and non-portable systems.</p><p>All of the above devices receive asynchronous notifications using the standard ACPI event mechanism. Events occur for:</p><ul><li>Battery information changes implying batteries added or removed.</li><li>Battery charge status changes.</li><li>AC power unplugged or plugged in.</li><li>Lid opened or closed.</li><li>Sleep or power button presses.</li></ul><h3>QEMU ACPI PM Device Model</h3><p>This is the code that provides the device model emulation for the guest firmware discussed above. The virtual firmware communicates with QEMU through a set of IO ports. QEMU fetches data from Xenstore to furnish the virtual firmware with the information the devices need to report to the guest OS. This exchange is done via those ports.</p><p>The model also registers Xenstore watches and raises the required interrupts in the guest to drive the ACPI event mechanism. E.g. when the AC adapter is unplugged, a node is written to Xenstore. The model responds to this in its watch handler and raises the appropriate events in the guest.</p><h3>Power/Platform Management Daemon</h3><p>This daemon, called xcpmd, is responsible for gathering information from the platform and reporting it. One of the sets of information is about the batteries present on the system. Up to two batteries can be managed. The current information and status about the battery/batteries is written to Xenstore under the <code>/pm</code> node where the QEMU model above reads it.</p><p>This daemon is also responsible for monitoring changes to the system:</p><ul><li>Battery plugged in or removed.</li><li>Batter status changing – charging/discharging.</li><li>AC power plugged in or unplugged.</li><li>Lid opened or closed.</li><li>Sleep or power button pressed.</li></ul><p>In each case, the daemon responds by writing the nodes to Xenstore, again under <code>/pm</code>, where the QEMU model has registered its watches.</p><h2>Testing</h2><p>Testing can be done with any guest HVM that support ACPI. No custom drivers or software are needed. The OpenXT tools do not need to be installed. Multiple guests can be tested simultaneously.</p><p>The actions a guest OS takes on certain conditions are OS policy specific. These actions have defaults but they can also be changed. When testing, it should be noted what the actions are to validate the tests below.</p><p>This ACPI PM feature does not apply to the UIVM. It uses a separate mechanism to obtain the battery information.</p><p><strong>NOTE:</strong> the UIVM reporting is currently not working correctly or getting the battery information from the same source as this feature. The values displayed by the UIVM may not match the guests. See: <a href=\"https://openxt.atlassian.net/browse/OXT-295\" style=\"text-decoration: underline;\">https://openxt.atlassian.net/browse/OXT-295</a> and <a href=\"https://openxt.atlassian.net/browse/OXT-15\">https://openxt.atlassian.net/browse/OXT-15</a>.</p><h3>AC Power (portable systems only)</h3><ol><li>When the AC power adapter is plugged in, the guest should indicate this state, as well as when it is unplugged.</li><li>The guest should update its AC adapter state as the adapter is plugged and unplugged.</li></ol><h3>Battery Present (portable systems only)</h3><ol><li>If a system has 1 battery, the guest should show 1 present battery and possibly (e.g. Windows) one empty slot.</li><li>If a system has 2 batteries the guest should show both batteries.</li><li>If a system has more than 2 batteries a maximum of 2 will be displayed in the guest.</li><li>If a system has battery slots but all batteries are removed, the guest will show no batteries (e.g. Linux) or empty slots (e.g. Windows).</li><li>If either battery is hot-pluggable, removing or adding the battery will update the guest accordingly.</li></ol><h3>Battery Status (portable systems only)</h3><ol><li>Fully charged batteries should report as such in guests.</li><li>When AC power is removed, one or both batteries should start discharging (the behavior is dependent on system firmware).</li><li>When AC power is restored, one or both batteries should start recharging (the behavior is dependent on system firmware).</li><li>The guest OS may try to average the remaining capacity when 2 batteries are present when reporting the % remaining.</li><li>When the batteries reach diminished capacity level, the guest OS may take certain actions depending on its policy. This is OS specific.</li></ol><h3>Lid State (portable systems only)</h3><ol><li>When the lid is closed, the guest OS should take certain actions based on its policy.</li><li>When the lid is opened, the guest OS should take certain actions based on its policy.</li></ol><h3>Sleep/Power Buttons</h3><ol><li>When the sleep button is pressed, the guest OS should take certain actions based on its policy.</li><li>When the power button is pressed, the guest OS should take certain actions based on its policy.</li></ol><h3>Advanced Testing (portable systems only)</h3><p>Information about the real battery hardware can be obtained in a shell in <code>dom0</code>. It can be found in these locations:</p><pre><code>/proc/acpi/battery/BATn\n/sys/class/power_supply/BATn\n</code></pre><p>The <code>dmidecode</code> utility that reads the SMBIOS will also show battery information.</p><p>For Linux guests, the same methods used in <code>dom0</code> can but used to inspect battery information.</p><p>For Windows guests, more in depth information can be gotten about the batteries using this tool:</p><p><a href=\"http://www.nirsoft.net/utils/battery_information_view.html\">http://www.nirsoft.net/utils/battery_information_view.html</a></p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "DC"
}