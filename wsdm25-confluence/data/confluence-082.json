{
    "id": "confluence-082",
    "title": "What needs doing?",
    "url": "https://openxt.atlassian.net/wiki/spaces/OD/pages/14844082/What+needs+doing?",
    "content": "<p>Owned by Ross Philipson\nLast updated: Jun 16, 2016 by Christopher Clark\n\n</p><ac:structured-macro ac:macro-id=\"bf34d623-07a1-4931-afbd-00fa4e6bf4ae\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"><ri:page ri:content-title=\"Documentation Guidelines\"></ri:page></ri:attachment></ac:image></p><p>Copyright 2014 by Assured Information Security, Inc. Created by Ross Philipson &lt;philipsonr@ainfosec.com&gt;. This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro><h2>Tasks suitable for newcomers to OpenXT</h2><p>Here are some JIRA tickets that should be approachable for newcomers to OpenXT who are looking to get some practical experience with development or documentation. Before getting started, if the ticket already has an Assignee, you should contact that person to see if the work is already under way.</p><p><ac:structured-macro ac:macro-id=\"61a77655-57b1-4aae-a0f9-72c59d29d084\" ac:name=\"jira\" ac:schema-version=\"1\"><ac:parameter ac:name=\"server\">JIRA (openxt.atlassian.net)</ac:parameter><ac:parameter ac:name=\"jqlQuery\">project = OXT AND resolution = Unresolved AND labels = Welcome-to-OpenXT</ac:parameter><ac:parameter ac:name=\"serverId\">87e67eec-7c89-3635-99bf-e58e55630835</ac:parameter></ac:structured-macro></p><p>Items listed below this point will be less suited to newcomers.</p><h2>Task List - A Starting Point</h2><p>This is a first cut of putting together a task list of things that need to get done or we would like to get done. Each top level item may has a sub-list of smaller tasks listed. Many of these items were on other people's lists too (others involved in the OpenXT project). I am not including effort/time estimates or trying to prioritize these items at this time. I started it here on this wiki so it can be discussed, modified, added to, etc. Eventually we would want to get these items into Jira (and the details of how to do that may need discussion also). I did not use a table because they are not very friendly when using the Github wikis. Please feel free to edit...</p><h2>List</h2><p><strong>Update TBOOT</strong></p><p>Our current TBOOT if quite old. It needs a serious upgrade to the latest. This would be an ongoing task as new TBOOT versions are released. Update schedules would have to be carefully planned.</p><ul><li>Update to the newest TBOOT. In progress - moving to 1.8.3 as of 9/18/2015</li><li>Clean up the patch queue and upstream patches where possible.</li><li>Pick up UEFI support.</li><li>Update TPM tools and remove custom ones (Phil knows about this). Need TPM 2.0 support.</li><li>Update Trousers, need TPM 2.0 support.</li></ul><p><strong>Update Xen</strong></p><p>We would like to track upstream as closely as possible and minimize our patch queue. This would be an ongoing task as new Xen versions are released. Update schedules would have to be carefully planned.</p><ul><li>Update to Xen 4.6 (or newer).</li><li>Clean up the patch queue and upstream patches where possible.</li><li>Get rid of unneeded patches, old functionality, etc.</li><li>Pick up latest RTDS (real time scheduler) functionality.</li></ul><p><strong>Update Dom0 Kernel</strong></p><p>Again, we would like to track upstream as closely as possible and minimize our patch queue. This would be an ongoing task as new Kernel versions are released or new hardware support is needed. Update schedules would have to be carefully planned.</p><ul><li>Update to latest reasonable Linux 4.x LTS. In progress.</li><li>Move to 64b kernel?</li><li>Clean up the patch queue.</li></ul><p><strong>Open Embedded Enhancements</strong></p><p>Moving to a new OE and using layers.Â <em>TODO leaving mostly for others to fill in.</em></p><ul><li>Update OE to \"dizzy\"</li><li>Remove/eliminate redundant recipes that conflict/overlap with upstream</li><li>Upstream recipes that aren't openxt-specific package but might find a good home in another upstream layer.</li><li>Uprev bitbake &amp; upstream/eliminate bitbake patches/classes where possible.</li><li>Simplify do_build.sh, finding what solutions the OE community use to the work done in it and adopting or innovating in OE where possible.</li><li>Look at moving back to the standard OE approach of referencing the openxt repositories by commit ID and secure content hash rather by branch. As well as making OpenXT less unusual this would make versioning simpler since you'd need to consider versions in many fewer repositories which makes consistent updates to OpenXT easier (get your work merged into central repositories and then later get the updates made to openxt's OE recipes to move standard builds over to it). We'd still need good workflows for developers to test their changes to OpenXT specific components.</li><li>Create a layer repo for each of the major patch queues (undo the big move of all the pq repos into xenclient-oe).</li></ul><p><strong>PV USB</strong></p><p>This is a blanket item to cover all the PV USB work. Some of the specifics...</p><ul><li>Comprehensive USB testing, write test plan.</li><li>Upstream the drivers into Linux and the XenServer Windows PV drivers.</li><li>Upstream usbback into Xen.</li><li>USB 3</li></ul><p>Dependencies: XenServer PV Windows Drivers</p><p><strong>XenServer PV Windows Drivers</strong></p><p>The current PV driver set is a very old version of the XenServer drivers. People on the XenServer and platform teams at Citrix did a huge amount of work to open source the latest XenServer drivers and it seems they are becoming the industry standard:<a href=\"https://github.com/xenserver\">https://github.com/xenserver</a></p><ul><li>Integrate the XenServer PV Windows drivers into OpenXT (building/packaging/etc). In progress.</li><li>Make OpenXT additional drivers work with the XenServer drivers (esp. xenbus).</li><li>Modification to the SDK Windows bits to use the new XenServer drivers.</li></ul><p><strong>UEFI Support</strong></p><p>There may come a time when we see vendors begin to not support CSMs in their UEFI firmware any longer. OpenXT needs to be prepared for that. This mainly means supporting UEFI booting through GRUB2 using multiboot2 structures. For OpenXT this means TBOOT, Xen and Dom0 must have these new multiboot2 capabilities. It also means supporting GPT partitioning.</p><ul><li>Updated TBOOT with multiboot2/EFI support. Will pick this up with the move to 1.8.3.</li><li>Updated Xen with multiboot2/EFI support.</li><li>Ensure Dom0 kernel support for multiboot2/EFI.</li><li>Installer changes for supporting GPT.</li><li>Platform changes for supporting GPT.</li></ul><p>Dependencies: Update TBOOT, Update Xen</p><p><strong>Toolstack Core Changes</strong></p><p>This seems like a very broad item but here it is specifically addressing the core pieces like xenmgr-&gt;xenvm-&gt;libxc.</p><ul><li>Documentation! Especially the Haskell and OCaml bits. This will help in making some of the other decisions. In progresss - Martin has started this.</li><li>The future of the Ocaml code and moving to libxl (or something else).</li><li>Investigations into how well libxl scales.</li><li>The future of the Haskell code and what to do with xenmgr and friends.</li><li>Domain startup is tricky ... qemu-wrapper/dm-agent/svirt/.../qemu. We should do something about that (documentation at least).</li></ul><p>Dependencies: Everything</p><p><strong>Graphics Stack</strong></p><p>This is the Display Handler project introducing a whole new graphics architecture.</p><ul><li>RFC post for review. In progress, at least a first draft was submitted.</li><li>XenGT/GVT-g plan for OpenXT</li><li><em>TODO leaving this for others to fill in.</em></li></ul><p>Dependencies: Input Server Changes, PV USB, Superhid</p><p><strong>Input Server Changes</strong></p><p>The input server definitely needs a major overhaul and may need a complete redoing (to be seen).</p><ul><li>First need a specification or RFC document as a starting point.</li><li>Using libinput was brought up as a possibility.</li><li>Changes to support new graphics stack.</li></ul><p>Dependencies: Graphics Stack</p><p><strong>Superhid</strong></p><p>Superhid introduces a whole new way of creating virtual USB devices in guests, allowing guests to use native drivers and software to do all the standard HID business.</p><ul><li>RFC post for review.</li><li>Proof of concept. In progress.</li><li><em>TODO more on this.</em></li></ul><p>Dependencies: PV USB, Graphics Stack</p><p><strong>Build Improvements</strong></p><p>There are a number of things we can do better at...</p><ul><li>Use the OE SBUILD class to create Debian (.deb) tools packages for guests and service VMs (already written, mostly works).</li><li>Use the Haskell RPM builder to create CentOS (.rpm) tools packages for guests and service VMs (already written but it is not clear what state it is in).</li><li>Get rid of the mess of scripts for building tools packages.</li><li>Reduce the number of machine specific package builds and the number of machines.</li></ul><p><strong>Interdomain Communications</strong></p><p>We have V4V currently. Do we push forward with it and fix it or consider another approach like one of the grant models. Note that V4V will never be upstreamed into Xen so this is a rather largish nail in the coffin.</p><ul><li>RFC and discussions on how to proceed.</li><li>Possibly fixing V4V.</li><li>Fixing V4V also entails addressing issues that came up during the open source effort as well as known bugs.</li><li>In the short term, porting the Windows driver to the XenServer xenbus.</li><li>V4V should have a socket class too.</li><li>Possibly using a grant model like libvchan. This would require writing a lot of new stuff.</li></ul><p>Dependencies: XenServer PV Windows Drivers</p><p><strong>Standardize RPC Communications</strong></p><p>OpenXT currently has multiple RPC mechanisms and no real standards for interfaces and proxies etc.</p><ul><li>DBus/DMBus, keep both move to just one of them? (DMBus and DBus overlap most of the time...)</li><li>Some DBus messages should be DMBus unless we decide to drop DMBus.</li><li>Bouncers &amp; proxies should have libraries with interface handling and be consistent.</li><li>Statically linked binaries in stubdoms contributes to this mess and is unnecessary.</li></ul><p><strong>Audio Improvements</strong></p><p>Really kind of a general bucket for audio related tasks and issues.</p><ul><li>Audio microphone.</li></ul><p><strong>BVT Automated Tests</strong></p><p>The original BVT automated test framework was also pushed to open source under the openxt-extras organization. Good automated tests may be key to success of the overall project.</p><ul><li>Improvements to the existing framework (in progress). Some work was done on this by Chris R. in 2014/2015.</li><li>Deployment/integration within a larger build infrastructure.</li><li>Engineering participation in test writing.</li></ul><p><strong>Sync XT Improvements</strong></p><ul><li>implement postgresql as an alternative (or replacement if we can do migration?) to the use of the Oracle RDBMS.</li><li>selinux policy for the server</li><li>selinux policy for the client syncvm</li><li>an open source web interface for SyncXT</li></ul><p><strong>vTPM Integration</strong></p><p>Adopting the vTPM work done in Xen and elsewhere in OpenXT.</p><ul><li>Basic integration with existing vTPM solutions.</li><li><em>TODO and beyond that</em></li><li><em>TODO remote attestation, realm support, etc.</em></li></ul><p><strong>Documentation</strong></p><p>OpenXT needs a plan for documentation. Currently there are just a bunch of PDFs pushed out in the open source effort.</p><ul><li>Sorting out the mess that is the docs.git repo. We need to work with Citrix on this. In progress.</li><li>What tools etc do we use to edit and maintain documentation.</li><li>Mechanisms for ensuring documentation is kept up to date and ready for eventual OpenXT release cycles.</li><li>Proper READMEs in the repos to explain what is in them.</li></ul><h2>Done Stuff</h2><p><strong>Update TBOOT</strong></p><ul><li>Patch for CVE-2014-5118. Done, up-streamed.</li></ul><p><strong>Update Dom0 Kernel</strong></p><ul><li>Update to latest reasonable Linux 3.x. Maybe stick with LTS ones? Done by Eric in 2015, moved to 3.18.19.</li><li>Download from <a href=\"http://kernel.org\">kernel.org</a> and don't use Ubuntu kernels (like linux-3.11.10.4.tar.gz). Done.</li></ul><p><strong>Update QEMU</strong></p><ul><li>Finish move to 1.4 (in progress). Done by Eric et al in 2014/2015.</li><li>Get rid of unneeded patches, old functionality, etc.</li></ul><p><strong>PV USB</strong></p><ul><li>Stabilize the new PV USB solution in OpenXT. Done by Ross in 2014.</li><li>Create a Linux front end driver. Done by Ross in 2015.</li><li>Rewrite the vusb dom0 deamon(s). Done by Jed in 2015.</li></ul><p><strong>OpenXT PV Linux Drivers</strong></p><ul><li>Get rid of the duplicate drivers. Done by Ross in 2015.</li><li>Re-base the remaining drives on PVOPS xenbus. Done by Ross in 2015.</li></ul><p><em><br/></em></p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassianâs official documentation for the most current information.",
    "space": "OD"
}