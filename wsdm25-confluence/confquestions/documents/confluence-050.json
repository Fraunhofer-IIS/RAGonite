{
    "id": "confluence-050",
    "title": "PV Linux Drivers",
    "url": "https://openxt.atlassian.net/wiki/spaces/DC/pages/14843965/PV+Linux+Drivers",
    "content": "<p>Owned by Ross Philipson\nLast updated: Sep 01, 2016 by Ross Philipson\n\n</p><ac:structured-macro ac:macro-id=\"c84629bf-0e8e-421f-9347-938676448a9a\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"><ri:page ri:content-title=\"Documentation Guidelines\" ri:space-key=\"OD\"></ri:page></ri:attachment></ac:image></p><p>Copyright 2015 by Assured Information Security, Inc. Created by Ross Philipson &lt;philipsonr@ainfosec.com&gt;. This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro><p>The PV Linux Drivers (aka the Linux tools) are located at <a href=\"https://github.com/OpenXT/pv-linux-drivers\">https://github.com/OpenXT/pv-linux-drivers</a></p><p>They are built by the build scripts as both Debian and RPM packages.</p><p>They can be found in the build output directory and on the iso in the \"debian\" and \"rpms\" directories, that can be used at repositories by the package managers.</p><p>Since they are kernel modules, they are distributed as DKMS packages that get compiled against the kernel(s) that the guest is using.</p><h2>Development</h2><p>To work on the PV Linux Drivers, just clone them in a guest and use simple make operations.</p><p>For example, to work on the vusb driver in a Debian Jessie 64 bits guests:</p><pre>$ sudo apt-get install git build-essential linux-headers-amd64  # or linux-headers-`uname -r` on Ubuntu</pre><pre>$ git clone <a class=\"moz-txt-link-freetext\" href=\"https://github.com/OpenXT/pv-linux-drivers.git\">https://github.com/OpenXT/pv-linux-drivers.git</a>\n$ cd pv-linux-drivers/openxt-vusb    # Then make the desired modifications\n$ make                               # Build\n$ sudo make install                  # (optional) Install\n$ sudo modprobe openxt-vusb          # Load the module to test it</pre><h2>Previous method</h2><p>The Linux PV drivers for OpenXT are a DKMS package that is built/rebuilt on in the Linux guest.</p><h3>DKMS Manually for Development</h3><p>It is possible to do development work on the Linux PV driver sources directly on in a guest VM with just the Github repository here:</p><p><a href=\"https://github.com/OpenXT/pv-linux-drivers\">https://github.com/OpenXT/pv-linux-drivers</a></p><p>Or with your own forked repository (and branch). Simply clone your repository in the guest. Then install these packages:</p><p><code>$ sudo apt-get install git vim dkms</code></p><p>This repository contains sub-directories, each of which is a DKMS package. The DKMS script is going to expect the DKMS sources to be in a predefined place. For our purposes, let's use the v4v DKMS package (it will be obvious what would have to be done for the others). DKMS will expect the sources for it to be here for version 1.0:</p><p><code>/usr/src/openxt-pv-v4v-dkms-1.0</code></p><p>The simplest thing is to link this to the sources in your repo:</p><p><code>$ sudo ln -fs /home/somebody/pv-linux-drivers.git/xc-v4v /usr/src/openxt-pv-v4v-dkms-1.0</code></p><p>Then switch to the directory where the DKMS install script is:</p><p><code>$ cd /home/somebody/pv-linux-drivers.git/v4v/dkms</code></p><p>And run:</p><p><code>$ sudo ./postinst</code></p><p>To just rebuild the kernel module, go to the sources directory itself and run <code>make</code>. The module can then be directly copied directly to this location (and loaded with <code>modprobe</code>):</p><p><code>/lib/modules/&lt;kernel-ver&gt;/update/dkms</code></p><p>If you want to remove your package at a later point (e.g. to re-install it), you can use this and then rerun the <code>postinst</code> script after your changes are done:</p><p><code>$ sudo dkms remove -m openxt-pv-v4v-dkms -v 1.0 -k &lt;kernel-ver&gt;</code></p><p>As noted, doing a <code>make</code> in the pv-linux-drivers.git sources directories will make a local copy of the binaries in that location. The <code>postinst</code> script is driving DKMS under the covers. During the (re-)install, DKMS makes a copy of the sources under <code>/var/lib/dkms/openxt-pv-v4v-dkms</code> for v4v in this case and this is where the modules that end up in<code>/lib/modules/&lt;kernel-ver&gt;/update/dkms</code> are actually built and installed from.</p><p>If the VM in question does not have a actual tools package installed and you want XT to think they are (which is needed in some cases), you can update the VM config to say it has tools. Log in to dom0 and use the <code>nr</code> command to elevate permissions. Then do something like:</p><p><code>$ xec-vm -n &lt;my-vm-name&gt; set pv-addons true</code></p><p><code>$ xec-vm -n &lt;my-vm-name&gt; set pv-addons-version \"14.0.0.1\"</code></p><h3>Driver Installation</h3><p>This section comes from the OpenXT documentation but it presented here for convenience. A couple of things to note (and that need to be added to future docs):</p><ol><li>Make sure you do an <code>apt-get update</code> before you start the install.</li><li>Make sure the xctools cd is not mounted with noexecute.</li></ol><p><strong>Note</strong> Do not install the OpenXT Tools on Linux using dpkg directly, nor by double-clicking on the package via the graphical desktop. Note that for this procedure:</p><ul><li>an internet connection is required</li><li>the script must be executed as root</li><li>the script will download 100 MB of kernel source files in order to build a new Linux graphics driver</li></ul><p>1 At a command line shell on the VM, change users to become the superuser:</p><p><code>sudo su</code></p><p>2 Display the available drives with the command and Observe the name of the optical drive with the OpenXT Tools; it will be something like /media/Optical-tools-&lt;version number&gt;.</p><p><code>df -k</code></p><p>3 Change to the linux directory on the optical drive with the OpenXT Tools package:</p><p><code>cd /media/OpenXT-tools-&lt;version number&gt;/linux</code></p><p>4 Run the install.sh script:</p><p><code>./install.sh</code></p><p>5 Reboot the VM.</p><p><strong>Note</strong> The UIVM for OpenXT will show the tools as installed, but a reboot is required to properly complete the Tools installation.</p><p><span><br/></span></p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "DC"
}