{
    "id": "confluence-054",
    "title": "xl Old Installer Method",
    "url": "https://openxt.atlassian.net/wiki/spaces/DC/pages/29851687/xl+Old+Installer+Method",
    "content": "<p>Owned by Ross Philipson\nLast updated: Mar 31, 2016 by Ross Philipson\n\n</p><ac:structured-macro ac:macro-id=\"18801b2d-f552-44ca-b6e4-177e3858ba05\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"></ri:attachment></ac:image></p><p>Copyright 2016 by Assured Information Security, Inc. Created by Martin Osterloh &lt;osterlohm@<a href=\"http://ainfosec.com/\">ainfosec.com</a>&gt;. This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro><p>This section highlights how to install the current LibXL (plus associated XL binary) in OpenXT and how to use it. Note these instructions were for builds of stable-5.</p><h2>Installation of LibXL and XL</h2><p>Firstly, we will make sure that LibXL and its associated binary will be compiled as part of the xen-tools package. In order to do so, we edit the file build/repos/xenclient-oe/recipes-extended/xen/<a class=\"external-link\" href=\"http://xen-tools.bb/\" rel=\"nofollow\">xen-tools.bb</a>  to contain:</p><p>oe_runmake -C tools subdir-all-libaio<br/>oe_runmake -C tools subdir-all-blktap2<br/>oe_runmake -C tools subdir-all-libxl</p><p>within the function do_compile() and </p><p>oe_runmake -C tools subdir-install-blktap2<br/>oe_runmake -C tools subdir-install-libxl</p><p>within the function do_install(). This will compile and install the necessary libraries and binaries to use LibXL. Next step is ensuring that the previously used blktap library is no longer in use. There are four recipes that reference the blktap library. They are:  </p><ul><li>./xenclient-oe/recipes-openxt/qemu-dm/qemu-dm.inc:4:DEPENDS = \"xen-tools alsa-lib pciutils libpng blktap libv4v openssl zlib libcap-ng libdmbus\"</li><li>/xenclient-oe/recipes-core/images/<a class=\"external-link\" href=\"http://xenclient-syncvm-image.bb/\" rel=\"nofollow\">xenclient-syncvm-image.bb</a>:29: blktap</li><li>./xenclient-oe/recipes-core/tasks/<a class=\"external-link\" href=\"http://task-xenclient-installer.bb/\" rel=\"nofollow\">task-xenclient-installer.bb</a>:15: blktap</li><li>./xenclient-oe/recipes-core/tasks/<a class=\"external-link\" href=\"http://task-xenclient-dom0.bb/\" rel=\"nofollow\">task-xenclient-dom0.bb</a>:63: blktap</li></ul><p>Removing the occurences of blktap (and making sure that xen-tools is listed) will guarantee that Xen's blktap library is being used from now on.</p><p>The interface is the new blktap library has slightly changed, so we need to make a few changes to the install scripts to accommodate for the changes.</p><p>In the xenclient-installer directory, edit the file:</p><p>part2/stages/Functions/install-main </p><p>and replace tap-ctl destroy calls with:</p><p>tap-ctl destroy -p $UIVM_GCONF_DEV_PID -m $UIVM_GCONF_DEV_TRUNC &gt;&amp;2</p><p>The complete source can be found on my github page.</p><p>Once the installer is edited, we can make a new build via </p><p>./do_build.sh -s dom0,installer,installer2,ship.</p><p>You will notice that uivm will not come up. That is because our blktap binary still works with the old blktap library interface. We can circumvent that particular problem by moving /usr/sbin/tap-ctl to /usr/sbin/tap-ctl.bak and instead, pasting the following wrapper as /usr/sbin/tap-ctl </p><p>#!/bin/ash</p><p>if echo $@ | grep \"create\" &gt; /dev/null 2&gt;/dev/null; then<br/>tmp=\"`echo $@ | sed 's/-R//'`\"<br/>/usr/sbin/tap-ctl.bak $tmp<br/>elif echo $@ | grep \"destroy\" &gt; /dev/null 2&gt;/dev/null; then<br/>MINOR=`echo $@ | sed -e 's/\\(^.*\\)\\(.$\\)/\\2/'`<br/>PID=$(/usr/sbin/tap-ctl.bak list -m ${MINOR} | grep \"pid=\" | awk '{print $1}' | sed -r 's/^.{4}//')<br/>/usr/sbin/tap-ctl.bak destroy -p $PID -m $MINOR<br/>else<br/>/usr/sbin/tap-ctl.bak $@<br/>fi</p><p>At this point, we need to make modifications to the running OpenXT system to allow XL to operate. In particular, we need to disable flask in /boot/system/grub/grub.cfg. After a reboot, we can proceed to paste the following into /usr/lib/xen/bin/qemu-system-i386:</p><p>#!/bin/bash<br/>DOMID=`cat /tmp/domid`<br/>let \"NEWID=$DOMID+1\"<br/>echo \"$NEWID\" &gt; /tmp/domid<br/>/usr/bin/qemu-system-i386 -xen-domid $DOMID -nodefaults -name qemu-3.0 -machine xenfv,max-ram-below-4g=0xf0000000 -m 1024 -vga std -display surfman -drive file=/dev/xen/blktap-2/tapdev0,if=ide,index=0,media=disk,format=raw,readonly=off</p><p>Make sure that /tmp/domid exists and starts with a \"1\". A sample config file for a Win7 HVM guest can be:</p><p>builder = \"hvm\"<br/>name = \"Win7x64\"<br/>uuid = \"8d85049a-9bdd-11e2-9e91-18037322eba8\"<br/>memory = 1024<br/>vcpus = 1<br/>disk = [ '/dev/xen/blktap-2/tapdev0,raw,xvda,rw' ]<br/>vnc = 1<br/>videoram = 16</p><p> Note that the disk <strong>has</strong> to be a tap device since our QEMU does not understand VHDs. XL should now be able to create a domain and at least start the guest. </p><p> </p><p>02/11/2016: Ross has put all of the above in one bash script. It is located on the filer. </p><h4><strong>Final Note On Getting VMs up and running using XL</strong></h4><p>Using the qemu wrapper supplied below, xl is able to start a Debian 7.8 64bit guest successfully including networking. </p><pre>#!/bin/bash</pre><pre>DOMID=`cat /tmp/domid`<br/>XL_QMP_PATH=\"/var/run/xen/qmp-libxl-\"<br/>XL_QMP_PATH=\"$XL_QMP_PATH$DOMID\"<br/>let \"NEWID=$DOMID+1\"<br/>echo \"$NEWID\" &gt; /tmp/domid</pre><pre>/usr/bin/qemu-system-i386 -xen-domid $DOMID -nodefaults -name qemu-3.0 -machine xenfv,max-ram-below-4g=0xf0000000 -m 1024 -vga std -display surfman -device xenmou -drive file=/dev/xen/blktap-2/tapdev0,if=ide,index=0,media=disk,format=raw,readonly=off -chardev socket,id=libxl-cmd,path=$XL_QMP_PATH,server,nowait -qmp unix:$XL_QMP_PATH,server,nowait -serial tcp:192.168.2.105:3535 -net tap,vlan=0,ifname=tap0,script=/root/qemu-ifup -vnc :0</pre><p>Of course, the IP for serial out will depend on your network topology. Note, that QMP (Qemu Machine Protocol) is now being used. This requires the directory /var/run/xen/ to be writable (that is where the socket lives). There are, however, a few quirks associated in this process. Namely, they are:</p><ul><li>The UUID of the VM is currently manually added via \"db-write /vm/&lt;uuid&gt;\" - This can also go in the wrapper</li><li>Ross has put an \"xlhack\" script on github that can be used in the meantime (<a class=\"external-link\" href=\"https://github.com/rossphilipson/travail/blob/master/openxt/xl_work/xltool.sh\" rel=\"nofollow\">https://github.com/rossphilipson/travail/blob/master/openxt/xl_work/xltool.sh</a>) </li><li>xen-netback has to be installed and <strong>loaded</strong> in dom0 (this will need some serious work with stubdoms/ndvm)tap_ctl_attach</li></ul><p><strong>Final config file for Debian 7.8 64 bit HVM:</strong></p><p><strong>Debian.78HVM</strong></p><div><div class=\"syntaxhighlighter sh-confluence nogutter bash\"><p> </p></div></div><ac:structured-macro ac:macro-id=\"0d94ad8b-87e1-498a-855d-1cc3d87f4730\" ac:name=\"code\" ac:schema-version=\"1\"><ac:parameter ac:name=\"language\">bash</ac:parameter><ac:parameter ac:name=\"title\">Debian.78HVM</ac:parameter><ac:plain-text-body><![CDATA[builder = \"hvm\"\nname = \"Debian\"\nuuid = \"7c85049a-9bdd-11e2-9e91-18037322eb44\"\nmemory = 1024\nvcpus = 1\ndisk = ['/dev/xen/blktap-2/tapdev0,raw,xvda,rw']\nvideoram = 16\nvif = [ \"bridge=xenbr0,script=vif-bridge\" ]]]></ac:plain-text-body></ac:structured-macro><p>Please note that the script in /etc/xen/scripts has to be slightly modified to allow proper VIF usage. It is part of the xl script that Ross has provided. In short: line 119 looks now like </p><p>dev=`echo ${dev} | sed 's/....$//'` #truncate the last 4 characters (-emu) from the dev name to allow proper handling later on</p>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "DC"
}