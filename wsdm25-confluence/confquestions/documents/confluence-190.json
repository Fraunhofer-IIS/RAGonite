{
    "id": "confluence-190",
    "title": "Bats: Bash Automated Testing System",
    "url": "https://openxt.atlassian.net/wiki/spaces/TEST/pages/64716806/Bats:+Bash+Automated+Testing+System",
    "content": "<p>Owned by Daniel Smith\nLast updated: Nov 03, 2016 by Daniel Smith\n\n</p><p>From Bats github page, \"Bats is a <a href=\"http://testanything.org\">TAP</a>-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected.\"<sup>[<a href=\"https://github.com/sstephenson/bats\">1</a></sup><sup>]</sup></p><p>Bats was utilized as it provides a simple way for individuals to write simple Bash closures declared using the Bats DSL to test expected behavior of OpenXT.</p><h2>Getting Started</h2><p>Bats is enabled/disabled using the DISTRO_FEATURE variable of the OpenEmbedded build system. This variable is declared in OpenXT's local.conf and is the best place to add the bats distro feature. Below is an example of adding bats to the current distro features,</p><pre>    DISTRO_FEATURES = \"alsa ext2 largefile usbhost wifi xattr pci x11 ipv4 ipv6 ${DISTRO_FEATURES_LIBC} multiarch pam bats\"</pre><p>When this feature is enabled there will be a \"<code>bats</code>\" command available in DOM0 along with all upstream tests installed in \"<code>/usr/lib/<code>bats-testsuite</code>/{dom0,ndvm,uivm}</code>\". It is possible to execute all tests by passing the directory containing the desired tests one wants to run, e.g \"<code>bats /usr/lib/<code>bats-testsuite</code>/dom0</code>\" will run all dom0 test scripts. To run an individual test script, pass the full path to the script, e.g. \"<code>bats /usr/lib/bats-testsuite/dom0/access_control.bats</code>\".</p><h2>Writing Tests</h2><p>A test script, ending in .bats, may contain one or more test. A test is effectively a bash function with the exception that if any command evaluated returns a non-zero status, then the test is deemed failing. The basic structure of a test is below,</p><pre>    @test \"short description show when test is ran\" {</pre><pre>        some command</pre><pre>        [ -f /some/file ]</pre><pre>    }</pre><p>Execution of the test will result in the following output</p><pre><code>    $ bats example.bats\n<code>    </code> ✓ short description show when test is ran\n\n<code>    1</code> tests, 0 failures\n</code></pre><p>There are more advance features available to assist in writing more complex test scenarios that can be found on Bats github page<sup>[<a href=\"https://github.com/sstephenson/bats\">1</a>]</sup>.</p><p><br/></p><ac:structured-macro ac:macro-id=\"1717ad2d-de2f-4eb8-a22c-15b1d9f8cbea\" ac:name=\"info\" ac:schema-version=\"1\"><ac:parameter ac:name=\"icon\">None</ac:parameter><ac:rich-text-body><p><ac:image ac:width=\"80\"><ri:attachment ri:filename=\"cc-by.png\"></ri:attachment></ac:image></p><p>Copyright 2016 by Apertus Solutions, LLC Created by Daniel P. Smith &lt;dpsmith@apertussolutions.com&gt; This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit <a class=\"external-link\" href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">http://creativecommons.org/licenses/by/4.0/</a>.</p></ac:rich-text-body></ac:structured-macro>",
    "date": "2024-11-15",
    "disclaimer": "Users of this benchmark dataset are advised to check Atlassian’s official documentation for the most current information.",
    "space": "TEST"
}